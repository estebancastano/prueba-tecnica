generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified Boolean      @default(false)  // âœ… Cambiado de DateTime? a Boolean
  image         String?
  phone         String?
  role          Role         @default(ADMIN)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  movimientos   Movimiento[]
  Account       Account[]
  Session       Session[]
}

model Account {
  id           String    @id @default(cuid())
  userId       String
  accountId    String
  providerId   String
  accessToken  String?   @db.Text
  refreshToken String?   @db.Text
  idToken      String?   @db.Text
  expiresAt    DateTime?
  scope        String?
  password     String?
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([providerId, accountId])
}

model Session {
  id           String   @id @default(cuid())
  token String   @unique
  userId       String
  expiresAt    DateTime
  ipAddress    String?
  userAgent    String?
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
}

model Movimiento {
  id       String         @id @default(cuid())
  concepto String
  monto    Float
  fecha    DateTime       @default(now())
  tipo     TipoMovimiento
  userId   String
  usuario  User           @relation(fields: [userId], references: [id])
}

enum TipoMovimiento {
  INGRESO
  EGRESO
}

enum Role {
  ADMIN
  USUARIO
}
